all:
  children:
    iscsi:
      hosts:
%{~ for ip_iscsi in ips_iscsi }
        ${ip_iscsi}:
          ansible_connection:  "ssh"
%{~ if iscsi.authentication.type == "key" }
          ansible_user:        "${iscsi.authentication.username}"
%{~ endif }
%{~ if iscsi.authentication.type == "password" }
          ansible_user:        "${iscsi.authentication.username}"
          ansible_ssh_pass:    "${iscsi.authentication.password}"
          ansible_become_pass: "${iscsi.authentication.password}"
%{~ endif }
%{~ endfor }

    hanadbnodes:
      children:
        ${sid}_HDB:
          hosts:
%{~ for ip_dbnode_admin in ips_dbnodes_admin }
            ${ip_dbnode_admin}:
              ansible_connection:  "ssh"
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.type == "key" }
            ansible_user:        "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.username}"
%{~ endif }
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.type == "password" }
              ansible_user:        "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.username}"
              ansible_ssh_pass:    "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.password}"
              ansible_become_pass: "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.password}"
%{~ endif }
%{~ endfor }

    scsnodes:
      children:
        ${sid}_SCS:
          hosts:
%{~ for ip_scs in ips_scs }
            ${ip_scs}:
              ansible_connection: "ssh"
              ansible_user:       "${application.authentication.username}"
%{~ if application.authentication.type == "password" }
              ansible_ssh_pass:    "${application.authentication.password}"
              ansible_become_pass: "${application.authentication.password}"
%{~ endif }
%{~ endfor }

    appnodes:
      children:
        ${sid}_APP:
          hosts:
%{~ for ip_app in ips_app }
            ${ip_app}:
              ansible_connection: "ssh"
              ansible_user:       "${application.authentication.username}"
%{~ if application.authentication.type == "password" }
              ansible_ssh_pass:    "${application.authentication.password}"
              ansible_become_pass: "${application.authentication.password}"
%{~ endif }
%{~ endfor }

    webnodes:
      children:
        ${sid}_WEB:
          hosts:
%{~ for ip_web in ips_web }
            ${ip_web}:
              ansible_connection: "ssh"
              ansible_user:       "${application.authentication.username}"
%{~ if application.authentication.type == "password" }
              ansible_ssh_pass:    "${application.authentication.password}"
              ansible_become_pass: "${application.authentication.password}"
%{~ endif }
%{~ endfor }

    asenodes:
      children:
        ${sid}_ASE:
          hosts:
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "ASE" }
            ${ips_anydbnode}:
              ansible_connection:  "ssh"
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
%{~ endif }
%{~ endfor }

    oraclenodes:
      children:
        ${sid}_ODB:
          hosts:
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "ORACLE" }
            ${ips_anydbnode}:
              ansible_connection:  "ssh"
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
%{~ endif }
%{~ endfor }

    db2nodes:
      children:
        ${sid}_DB2DB:
          hosts:
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "DB2" }
            ${ips_anydbnode}:
              ansible_connection:  "ssh"
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
%{~ endif }
%{~ endfor }

    sqlservernodes:
      children:
        ${sid}_SQLDB:
          hosts:
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "SQLSERVER" }
            ${ips_anydbnode}:
              ansible_connection:  "winrm"
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
%{~ endfor }

    # Groups below are collections of the above groups for easier reference
    all_linux_servers:
      children:
        hanadbnodes:
        scs:
        app:

    # Localhost provisioning
    local:
      hosts:
        localhost:
          ansible_connection: "local"
          ansible_user:       "azureadm"
