all:
  children:
      ${sid}:
        iscsi:
          hosts:
    %{~ for ip_iscsi in ips_iscsi }
            ${ip_iscsi}:
              ansible_connection:  "ssh"
              ansible_host:  ${ip_iscsi}
    %{~ if iscsi.authentication.type == "key" }
              ansible_user:        "${iscsi.authentication.username}"
    %{~ endif }
    %{~ if iscsi.authentication.type == "password" }
              ansible_user:        "${iscsi.authentication.username}"
              ansible_ssh_pass:    "${iscsi.authentication.password}"
              ansible_become_pass: "${iscsi.authentication.password}"
    %{~ endif }
    %{~ endfor }
        DB:
%{~ for ip_dbnode_admin in ips_dbnodes_admin }
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].platform == "HANA" }
          hosts:
            ${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].name}:
              ansible_connection:  "ssh"
              ansible_host:  ${ip_dbnode_admin}
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.type == "key" }
              ansible_user:        "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.username}"
%{~ endif }
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.type == "password" }
              ansible_user:        "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.username}"
              ansible_ssh_pass:    "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.password}"
              ansible_become_pass: "${dbnodes[index(ips_dbnodes_admin, ip_dbnode_admin)].authentication.password}"
%{~ endif }
          vars:
            tier: hdb
%{~ endif }
%{~ endfor }
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "ASE" }
          hosts:
            ${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].name}:
              ansible_connection:  "ssh"
              ansible_host:  ${ips_anydbnode}
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
          vars:
            tier: ase
%{~ endif }
%{~ endfor }
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "DB2" }
          hosts:
            ${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].name}:
              ansible_connection:  "ssh"
              ansible_host:  ${ips_anydbnode}
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
          vars:
            tier: db2
%{~ endif }
%{~ endfor }
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "ORACLE" }
            ${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].name}:
              ansible_connection:  "ssh"
              ansible_host:  ${ips_anydbnode}
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
          vars:
            tier: oracle
%{~ endif }
%{~ endfor }
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "SQLSERVER" }
          hosts:
            ${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].name}:
              ansible_connection:  "winrm"
              ansible_host:  ${ips_anydbnode}
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
              ansible_user:        "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}"
              ansible_ssh_pass:    "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
              ansible_become_pass: "${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}"
%{~ endif }
          vars:
            tier: sqlserver
%{~ endif }
%{~ endfor }
      SCS:
        hosts:
  %{~ for ip_scs in ips_scs }
          scsservers:
            ansible_connection: "ssh"
            ansible_host: ${ip_scs}:
            ansible_user:       "${application.authentication.username}"
  %{~ if application.authentication.type == "password" }
            ansible_ssh_pass:    "${application.authentication.password}"
            ansible_become_pass: "${application.authentication.password}"
  %{~ endif }
  %{~ endfor }
      PAS:
        hosts:
  %{~ for ip_pas in ips_pas }
          passervers:
            ansible_connection: "ssh"
            ansible_host: ${ip_pas}:
            ansible_user:       "${application.authentication.username}"
  %{~ if application.authentication.type == "password" }
            ansible_ssh_pass:    "${application.authentication.password}"
            ansible_become_pass: "${application.authentication.password}"
  %{~ endif }
  %{~ endfor }
      APP:
        hosts:
  %{~ for ip_app in ips_app }
          appservers:
            ansible_connection: "ssh"
            ansible_host: ${ip_app}:
            ansible_user:       "${application.authentication.username}"
  %{~ if application.authentication.type == "password" }
            ansible_ssh_pass:    "${application.authentication.password}"
            ansible_become_pass: "${application.authentication.password}"
  %{~ endif }
  %{~ endfor }
      WEB:
        hosts:
  %{~ for ip_web in ips_web }
          webservers:
            ansible_connection: "ssh"
            ansible_host: ${ip_web}:
            ansible_user:       "${application.authentication.username}"
  %{~ if application.authentication.type == "password" }
            ansible_ssh_pass:    "${application.authentication.password}"
            ansible_become_pass: "${application.authentication.password}"
  %{~ endif }
  %{~ endfor }

